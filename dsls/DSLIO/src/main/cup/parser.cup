/* Simple +/-/* expression language; parser evaluates constant expressions on the fly*/
import java_cup.runtime.*;



/* define how to connect to the scanner! */
init with {: /** NOP  */ :};
scan with {: return getScanner().next_token(); :};



terminal IDENTITY, LITERAL;
terminal IMPERATIVE,METHOD_HEADER,OPTION;
terminal LOGIC_START, LOGIC_END, IO_START, IOSeparatorArrow, IO_END;




terminal	DO, WITH, NULL, LINE,
    WHEN, THEN, OTHERWISE, ELSE,
    STARTS, ENDS, CONTAINS, IS, NOT,
    CROSSWALK,
    SET, TO, ON,
    SPLIT, CONCAT,
    CONVERTDATE, SKIP, ERROR;

terminal	LOGIC_KEYWORD;
terminal	NOP, COMMENT;


/* Non terminals are your like tree */

non terminal dsl, statementList, statement;
non terminal ioOperation, logicStatement;



non terminal value;
non terminal logicFluff;

start with dsl;

dsl ::= statementList:s
;

statementList ::= statementList:sl statement:s
    | /* intentionally left empty (empty parse)*/
;

statement ::= NOP
	| COMMENT
    | SET value:where TO value:from
    | IO_START ioOperation:io IO_END
;

ioOperation ::= value:length logicFluff value:storeTo 
	| value:start logicFluff value:end logicFluff value:storeTo
;

value ::= LITERAL
        | IDENTITY
;

logicFluff ::= TO
	| ON
	| WITH
	| NOP
	| IOSeparatorArrow
	| /*Intentionally left blank*/
	;